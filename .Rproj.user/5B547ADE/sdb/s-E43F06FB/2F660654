{
    "contents" : "ModelData <- na.omit(ModelData)\nModelDataScaled <- ModelData\n\n\n#nums <- sapply(ModelDataFactored, is.numeric)\n#ModelDataScaled <- as.data.frame(scale(ModelData[, nums]))\n\nModelDataScaled <- sapply(ModelDataFactored, as.numeric)\nModelDataScaled <- as.data.frame(scale(ModelDataScaled))\n\n\nindex <- createDataPartition(ModelDataFactored$CKD, p = 0.75, list = FALSE)\ntraining <- ModelDataScaled[index,]\ntesting <- ModelDataScaled[-index,]\n\nKNN <- knn(training, testing, cl = training$CKD, k = 3)\n\n\n#Now let's try finding the best k\nctrl <- trainControl(method = \"repeatedcv\", number = 3, repeats = 3)\nknnFit <- train(CKD~., data = training, method = \"knn\", trControl = ctrl, tuneLength = 20)\nknnFit\nprint(\"Final value of k = 41\")\n\nKNN_Final <- knn(training, testing, cl = training$CKD, k = 19)\ntable(testing$CKD, KNN_Final)\nconfusionMatrix(KNN_Final, testing$CKD)\n\nprint(\"K-Nearest Neighbors results:\")\nprint(\"Accuracy: 98%\")\nprint(\"Sensitivity: 100% (overfitting?)\")\nprint(\"Specificity: 83%\")\n\n\ntraining <- NULL\ntesting <- NULL",
    "created" : 1449517003349.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "151031614",
    "id" : "2F660654",
    "lastKnownWriteTime" : 1449521558,
    "path" : "C:/Users/babaj/Desktop/Code/CKD-Tessilk/KNN.R",
    "project_path" : "KNN.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}